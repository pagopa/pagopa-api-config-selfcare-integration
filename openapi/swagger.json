{
  "swagger": "2.0",
  "info": {
    "description": "Spring application exposes APIs for SelfCare",
    "termsOfService": "https://www.pagopa.gov.it/",
    "title": "API-Config - SelfCare Integration",
    "version": "0.0.1"
  },
  "host": "127.0.0.1:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/creditorinstitutions/{creditorInstitutionCode}/stationsdetails": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "description": "Organization fiscal code, the fiscal code of the Organization.",
            "in": "path",
            "name": "creditorInstitutionCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/CreditorInstitutionStationDetailsList"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            }
          },
          "404": {
            "description": "Not Found",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ProblemJson"
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ProblemJson"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          },
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Creditor Institutions"
        ],
        "operationId": "getStationsDetailsFromCreditorInstitution",
        "summary": "Get creditor institution station list"
      }
    },
    "/info": {
      "parameters": [
        {
          "description": "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
          "in": "header",
          "name": "X-Request-Id",
          "type": "string"
        }
      ],
      "get": {
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/AppInfo"
            }
          },
          "400": {
            "description": "Bad Request",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ProblemJson"
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            }
          },
          "429": {
            "description": "Too many requests",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            }
          },
          "500": {
            "description": "Service unavailable",
            "headers": {
              "X-Request-Id": {
                "description": "This header identifies the call",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/ProblemJson"
            }
          }
        },
        "security": [
          {
            "ApiKey": []
          },
          {
            "Authorization": []
          }
        ],
        "tags": [
          "Home"
        ],
        "operationId": "healthCheck",
        "summary": "Return OK if application is started"
      }
    }
  },
  "definitions": {
    "AppInfo": {
      "properties": {
        "dbConnection": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "BrokerDetails": {
      "description": "Details of the intermediate EC of the station",
      "properties": {
        "broker_code": {
          "description": "Code used to identify the intermediate EC",
          "example": "223344556677889900",
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "broker_details": {
          "description": "Name and generic details of the intermediate EC",
          "example": "Regione Veneto",
          "type": "string"
        },
        "enabled": {
          "description": "Parameter to find out whether or not the intermediate has been enabled",
          "type": "boolean"
        },
        "extended_fault_bean": {
          "description": "Parameter to find out whether or not the extended fault bean has been enabled",
          "type": "boolean"
        }
      },
      "required": [
        "broker_code",
        "broker_details",
        "enabled",
        "extended_fault_bean"
      ],
      "type": "object"
    },
    "CreditorInstitutionStationDetailsList": {
      "properties": {
        "stations": {
          "description": "List of stations associated to the same EC",
          "items": {
            "$ref": "#/definitions/StationDetails"
          },
          "type": "array"
        }
      },
      "required": [
        "stations"
      ],
      "type": "object"
    },
    "ProblemJson": {
      "properties": {
        "detail": {
          "description": "A human readable explanation specific to this occurrence of the problem.",
          "example": "There was an error processing the request",
          "type": "string"
        },
        "status": {
          "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
          "example": 200,
          "format": "int32",
          "maximum": 600,
          "minimum": 100,
          "type": "integer"
        },
        "title": {
          "description": "A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized); example: Service Unavailable",
          "type": "string"
        }
      },
      "type": "object"
    },
    "StationDetails": {
      "description": "List of stations associated to the same EC",
      "properties": {
        "broker_description": {
          "description": "A description of the intermediate EC",
          "example": "Regione Lazio",
          "type": "string"
        },
        "broker_details": {
          "$ref": "#/definitions/BrokerDetails"
        },
        "enabled": {
          "default": true,
          "description": "Parameter to find out whether or not the station has been enabled",
          "type": "boolean"
        },
        "flag_online": {
          "type": "boolean"
        },
        "invio_rt_istantaneo": {
          "description": "Parameter useful to find out if the instantaneous rt has been enabled",
          "type": "boolean"
        },
        "ip": {
          "description": "Ip address of the station",
          "type": "string"
        },
        "ip_4mod": {
          "description": "Ip address 4mod associated to the station",
          "type": "string"
        },
        "new_password": {
          "description": "New password of the station",
          "type": "string"
        },
        "password": {
          "description": "Password of the station",
          "type": "string"
        },
        "pof_service": {
          "type": "string"
        },
        "port": {
          "description": "Port address of the station",
          "format": "int64",
          "maximum": 65535,
          "minimum": 1,
          "type": "integer"
        },
        "port_4mod": {
          "description": "Port address 4mod associated to the station",
          "format": "int64",
          "maximum": 65535,
          "minimum": 1,
          "type": "integer"
        },
        "primitive_version": {
          "description": "Primitive number version",
          "enum": [
            1,
            2
          ],
          "format": "int32",
          "maximum": 2,
          "minimum": 1,
          "type": "integer"
        },
        "protocol": {
          "description": "Protocol associated to the station",
          "enum": [
            "HTTPS",
            "HTTP"
          ],
          "type": "string"
        },
        "protocol_4mod": {
          "description": "Protocol 4mod associated to the station",
          "enum": [
            "HTTPS",
            "HTTP"
          ],
          "type": "string"
        },
        "proxy_enabled": {
          "description": "Parameter to inspect if the proxy has been enabled for this station",
          "type": "boolean"
        },
        "proxy_host": {
          "description": "Proxy host",
          "type": "string"
        },
        "proxy_password": {
          "type": "string"
        },
        "proxy_port": {
          "description": "Proxy port address",
          "format": "int64",
          "maximum": 65535,
          "minimum": 1,
          "type": "integer"
        },
        "proxy_username": {
          "type": "string"
        },
        "redirect_ip": {
          "description": "Redirect ip address of the station",
          "type": "string"
        },
        "redirect_path": {
          "description": "Redirect path of the station",
          "type": "string"
        },
        "redirect_port": {
          "description": "Redirect port address of the station",
          "format": "int64",
          "maximum": 65535,
          "minimum": 1,
          "type": "integer"
        },
        "redirect_protocol": {
          "description": "Redirect protocol associated to the station",
          "enum": [
            "HTTPS",
            "HTTP"
          ],
          "type": "string"
        },
        "redirect_query_string": {
          "description": "Redirect query string of the station",
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "service_4mod": {
          "type": "string"
        },
        "station_code": {
          "description": "Unique code to identify the station",
          "example": "1234567890100",
          "maxLength": 35,
          "minLength": 0,
          "type": "string"
        },
        "target_host": {
          "description": "Target address of the station",
          "type": "string"
        },
        "target_host_pof": {
          "description": "Pof address associated to the station",
          "type": "string"
        },
        "target_path": {
          "description": "Target path of the station",
          "type": "string"
        },
        "target_path_pof": {
          "description": "Pof path associated to the station",
          "type": "string"
        },
        "target_port": {
          "description": "Port address target associated to the station",
          "format": "int64",
          "type": "integer"
        },
        "target_port_pof": {
          "description": "Port address pof associated to the station",
          "format": "int64",
          "type": "integer"
        },
        "thread_number": {
          "format": "int64",
          "minimum": 1,
          "type": "integer"
        },
        "timeout_a": {
          "format": "int64",
          "minimum": 0,
          "type": "integer"
        },
        "timeout_b": {
          "format": "int64",
          "minimum": 0,
          "type": "integer"
        },
        "timeout_c": {
          "format": "int64",
          "minimum": 0,
          "type": "integer"
        },
        "version": {
          "description": "The version of the station",
          "format": "int64",
          "maximum": 2,
          "minimum": 1,
          "type": "integer"
        }
      },
      "required": [
        "broker_details",
        "enabled",
        "port",
        "primitive_version",
        "protocol",
        "station_code",
        "thread_number",
        "timeout_a",
        "timeout_b",
        "timeout_c",
        "version"
      ],
      "type": "object"
    }
  },
  "securityDefinitions": {
    "ApiKey": {
      "description": "The API key to access this function app.",
      "in": "header",
      "name": "Ocp-Apim-Subscription-Key",
      "type": "apiKey"
    }
  },
  "tags": [
    {
      "description": "Everything about Creditor Institution",
      "name": "Creditor Institutions"
    }
  ],
  "x-components": {}
}
